C++ inference setup
===================
1) Clone the Xgboost repo: 
   => git clone --recursive https://github.com/dmlc/xgboost.git
2) Build Xgboost code from Command Prompt following these steps (ensure you have a temp folder for the xgboost include & lib sub-folders):
   => cd xgboost
   => mkdir build
   => cd build
   => cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="C:/temp/xgboost"
   => cmake --build . --config Release --target install
3) The previous step will build/compile xgboost, creating a c:/temp/xgboost folder which includes sub-folders: "C:/xgboost/include" and "C:/xgboost/lib".
4) Next create a working sub-folder, cpp for the C++ inference code. This sub-folder will consists of:
   => predict_xgb_cpp.cpp (C++ inference code)
   => CMakeLists.txt (this file provide instructions to CMake on how to handle/link files and operations for to buid/compile the program)   
      So this step will use following CMakeList.txt file to do cmake build (links) to xgboost complied library (shown below):
		cmake_minimum_required(VERSION 3.20)
		project(xgb_predict_cpp VERSION 1.0 LANGUAGES CXX)

		set(CMAKE_CXX_STANDARD 17)
		set(CMAKE_CXX_STANDARD_REQUIRED ON)

		# Adjust these paths to where xgboost installed
		set(XGBOOST_INCLUDE_DIR "C:/xgboost/include")
		set(XGBOOST_LIBRARY_DIR "C:/xgboost/lib")

		include_directories(${XGBOOST_INCLUDE_DIR})
		link_directories(${XGBOOST_LIBRARY_DIR})

		add_executable(predict_xgb_cpp predict_xgb_cpp.cpp)
		target_link_libraries(predict_xgb_cpp PRIVATE xgboost) # or xgboost.lib
	
5) Build/compile the C++ inference code with Xgboost library:
   => Open the folder containing the c++ code (predict_xgb_cpp.cpp) and the CMakeList.txt file using VS 2022 and run (Debug/Release). 
6) Run the the C++ inference code:
   => ensure during program execution to include the runtime dependencies (located in this folder: \cpp\runtime_items):
      => xgb_diabetes_model.json (serailized trained model)
	  => xgboost.dll (Xgboost library)
	  => xgb_diabetes_test.csv (test data)
	  => make sure to include them next to executable in the \cpp\out\build\x64-Debug\ folder 
  
